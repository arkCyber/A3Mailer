# A3Mailer Development Dockerfile
# Multi-stage build for development environment with hot reloading

FROM rust:1.75-slim-bookworm AS base

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    pkg-config \
    libssl-dev \
    libclang-dev \
    ca-certificates \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# Install cargo tools for development
RUN cargo install cargo-watch cargo-edit cargo-audit cargo-outdated

# Set up working directory
WORKDIR /workspace

# Development stage with hot reloading
FROM base AS development

# Copy dependency files first for better caching
COPY Cargo.toml Cargo.lock ./
COPY crates/*/Cargo.toml ./crates/*/

# Create dummy source files to build dependencies
RUN find crates -name "Cargo.toml" -exec dirname {} \; | xargs -I {} mkdir -p {}/src
RUN find crates -name "Cargo.toml" -exec dirname {} \; | xargs -I {} touch {}/src/lib.rs
RUN echo "fn main() {}" > src/main.rs || true

# Build dependencies
RUN cargo build --workspace

# Remove dummy files
RUN find crates -name "src" -type d -exec rm -rf {} + || true
RUN rm -f src/main.rs || true

# Set up development environment
ENV RUST_LOG=debug
ENV RUST_BACKTRACE=1
ENV CARGO_INCREMENTAL=1

# Default command for development
CMD ["cargo", "watch", "-x", "run"]

# Production build stage
FROM base AS builder

# Copy source code
COPY . .

# Build release binary
RUN cargo build --release --workspace

# Runtime stage
FROM debian:bookworm-slim AS runtime

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Create app user
RUN useradd -r -s /bin/false a3mailer

# Copy binary from builder stage
COPY --from=builder /workspace/target/release/a3mailer /usr/local/bin/
COPY --from=builder /workspace/target/release/a3mailer-cli /usr/local/bin/

# Copy configuration and resources
COPY resources/ /opt/a3mailer/resources/

# Set up directories and permissions
RUN mkdir -p /opt/a3mailer/data /opt/a3mailer/logs \
    && chown -R a3mailer:a3mailer /opt/a3mailer

# Switch to app user
USER a3mailer

# Set working directory
WORKDIR /opt/a3mailer

# Expose ports
EXPOSE 25 110 143 587 465 993 995 4190 8080 443

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Default command
CMD ["a3mailer", "--config", "/opt/a3mailer/resources/config/production.toml"]
