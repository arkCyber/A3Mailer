name: Release

on:
  push:
    tags:
      - 'v*.*.*'

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: A3Mailer ${{ github.ref }}
        body: |
          ## 🚀 A3Mailer Release ${{ github.ref }}
          
          ### 📋 What's New
          - Feature updates and improvements
          - Bug fixes and performance enhancements
          - Security updates
          
          ### 📥 Installation
          Download the appropriate binary for your platform below.
          
          ### 📚 Documentation
          Visit [a3mailer.com](https://a3mailer.com) for complete documentation.
          
          ### 🐛 Bug Reports
          Please report any issues on our [GitHub Issues](https://github.com/a3mailer/a3mailer/issues) page.
        draft: false
        prerelease: false

  build-release:
    name: Build Release
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: a3mailer
            asset_name: a3mailer-linux-x86_64
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            artifact_name: a3mailer
            asset_name: a3mailer-linux-aarch64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact_name: a3mailer.exe
            asset_name: a3mailer-windows-x86_64.exe
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: a3mailer
            asset_name: a3mailer-macos-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact_name: a3mailer
            asset_name: a3mailer-macos-aarch64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Install cross (for cross-compilation)
      if: matrix.target == 'aarch64-unknown-linux-gnu'
      run: cargo install cross

    - name: Build release binary
      run: |
        if [ "${{ matrix.target }}" = "aarch64-unknown-linux-gnu" ]; then
          cross build --release --target ${{ matrix.target }}
        else
          cargo build --release --target ${{ matrix.target }}
        fi
      shell: bash

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
        asset_name: ${{ matrix.asset_name }}
        asset_content_type: application/octet-stream
